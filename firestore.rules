rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return signedIn() && request.auth.uid == uid;
    }

    // 1) Per-user documents: users/{uid}
    match /users/{uid} {
      // Create only your own doc (optional if you create server-side)
      allow create: if signedIn() && request.resource.data.uid == request.auth.uid;

      // Read/update/delete only your own
      allow read, update, delete: if isOwner(uid);
    }

    // 2) Public, read-only content
    match /public/{docId} {
      allow read: if true;
      allow write: if false; // nobody writes from the client
    }

    // 3) Posts with an authorId field
    match /posts/{postId} {
      allow read: if true;

      // Only signed-in users can create, and they must set themselves as author
      allow create: if signedIn()
                    && request.resource.data.authorId == request.auth.uid;

      // Only the author can update/delete
      allow update, delete: if signedIn()
                            && resource.data.authorId == request.auth.uid;
    }

    // 4) Fallback: deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
